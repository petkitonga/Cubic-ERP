@model Cubic_ERP.Areas.Finance.ViewModels.BankAccountFormViewModel
@{
    ViewBag.Title = "BankAccountForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h3 class="pull-left">Bank Accounts</h3>
    <a id="form-navigator" href="@Url.Action("Index", "BankAccounts")" class="btn btn-success btn-sm pull-right"><i class="glyphicon glyphicon-arrow-left"></i></a>
    <hr id="hr-separator" />
</div>

<div>
    <div class="col-md-5">
        @using (Html.BeginForm("Save", "BankAccounts", FormMethod.Post,new{@id="form-submit"}))
        {

            <div class="form-group">
                @Html.LabelFor(m => m.BankAccountDto.BankName)
                @Html.TextBoxFor(m => m.BankAccountDto.BankName, new { @class = "form-control", @id="first-form-input" })
                @Html.ValidationMessageFor(m => m.BankAccountDto.BankName)
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.BankAccountDto.BankBranch)
                    @Html.TextBoxFor(m => m.BankAccountDto.BankBranch, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BankAccountDto.BankBranch)
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.BankAccountDto.OfficeId)
                    @Html.TextBoxFor(m => m.BankAccountDto.OfficeId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BankAccountDto.OfficeId)
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.BankAccountDto.Name)
                    @Html.TextBoxFor(m => m.BankAccountDto.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BankAccountDto.Name)
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.BankAccountDto.AccountId)
                    @Html.DropDownListFor(m => m.BankAccountDto.AccountId, new SelectList(Model.AccountDtos, "Id", "AccountName"), "Select Account", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BankAccountDto.AccountId)
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.BankAccountDto.BankAccountNumber)
                    @Html.TextBoxFor(m => m.BankAccountDto.BankAccountNumber, new
                    {
                        @class = "form-control"})
                    @Html.ValidationMessageFor(m => m.BankAccountDto.BankAccountNumber)
                </div>
            </div>
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(m => m.BankAccountDto.IsMerchantAccount) Is Merchant Account?
                </label>
            </div>
            @Html.HiddenFor(m => m.BankAccountDto.Id)

            if(Model.ActionIndicator == 1)
             {
                 <button class="btn btn-primary" type="submit">Save</button>
             }
             else
             {
                 <a href="#" class="btn btn-primary" id="js-edit">Save</a>
             }
            <a href="@Url.Action("Index","BankAccounts")" class="btn btn-default">Cancel</a>
        }
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(
            function() {
                $("#js-edit").on('click',
                    function () {

                        bootbox.confirm("Are you sure you want to Edit this item?",
                            function(result) {
                                if (result) {
                                    $("#form-submit").submit();
                                }
                            }
                        );
                    }
                );
                
            }
        );

    </script>
}
